lines(x, dbeta(x, 2, 7))
df = 2
kern = function(data) {
#psi = function(h) sqrt(1 - h^2)
psi = function(h) (1 - h^2)^2
#psi = function(h) 1
d = stats::dnorm
q = stats::qnorm
df = 2
d = function(x, mu = 0, sigma = 1) dt((x - mu)/sigma, df = df)/sigma
q = function(x, mu = 0, sigma = 1) qt((x - mu)/sigma, df = df)
kernel = Vectorize(function(x) {
mean(1/(d(q(x)))*d(q(x), q(data)*psi(h), h))
})
kernel
}
set.seed(313)
data = rbeta(100, 2, 7)
h = 0.5
x = seq(0, 1, by = 0.01)
plot(x, kern(data)(x), type = "l")
lines(x, dbeta(x, 2, 7))
kern = function(data) {
#psi = function(h) sqrt(1 - h^2)
psi = function(h) (1 - h^2)^2
#psi = function(h) 1
d = stats::dnorm
q = stats::qnorm
df = 2
d = function(x, mu = 0, sigma = 1) dt((x - mu)/sigma, df = df)/sigma
q = function(x, mu = 0, sigma = 1) qt((x - mu)/sigma, df = df)
kernel = Vectorize(function(x) {
mean(1/(d(q(x)))*d(q(x), q(data)*psi(h), h))
})
kernel
}
set.seed(313)
data = rbeta(100, 2, 7)
h = 0.1
x = seq(0, 1, by = 0.01)
plot(x, kern(data)(x), type = "l")
lines(x, dbeta(x, 2, 7))
epanchnikov
kern = function(data) {
#psi = function(h) sqrt(1 - h^2)
psi = function(h) (1 - h^2)^2
#psi = function(h) 1
d = stats::dnorm
q = stats::qnorm
df = 2
d = function(x, mu = 0, sigma = 1) dt((x - mu)/sigma, df = df)/sigma
q = function(x, mu = 0, sigma = 1) qt((x - mu)/sigma, df = df)
kernel = Vectorize(function(x) {
mean(1/(d(q(x)))*d(q(x), q(data)*psi(h), h))
})
kernel
}
set.seed(313)
data = rbeta(100, 2, 7)
h = 0.5
x = seq(0, 1, by = 0.01)
plot(x, kern(data)(x), type = "l")
lines(x, dbeta(x, 2, 7))
kern = function(data) {
#psi = function(h) sqrt(1 - h^2)
psi = function(h) (1 - h^2)^2
#psi = function(h) 1
d = stats::dnorm
q = stats::qnorm
df = 2
d = function(x, mu = 0, sigma = 1) dt((x - mu)/sigma, df = df)/sigma
q = function(x, mu = 0, sigma = 1) qt((x - mu)/sigma, df = df)
kernel = Vectorize(function(x) {
mean(1/(d(q(x)))*d(q(x), q(data)*psi(h), h))
})
kernel
}
set.seed(313)
data = rbeta(100, 2, 7)
h = 0.3
x = seq(0, 1, by = 0.01)
plot(x, kern(data)(x), type = "l")
lines(x, dbeta(x, 2, 7))
kern = function(data) {
#psi = function(h) sqrt(1 - h^2)
psi = function(h) (1 - h^2)^2
#psi = function(h) 1
d = stats::dnorm
q = stats::qnorm
df = 10
d = function(x, mu = 0, sigma = 1) dt((x - mu)/sigma, df = df)/sigma
q = function(x, mu = 0, sigma = 1) qt((x - mu)/sigma, df = df)
kernel = Vectorize(function(x) {
mean(1/(d(q(x)))*d(q(x), q(data)*psi(h), h))
})
kernel
}
set.seed(313)
data = rbeta(100, 2, 7)
h = 0.3
x = seq(0, 1, by = 0.01)
plot(x, kern(data)(x), type = "l")
lines(x, dbeta(x, 2, 7))
kern = function(data) {
#psi = function(h) sqrt(1 - h^2)
psi = function(h) (1 - h^2)^2
#psi = function(h) 1
d = stats::dnorm
q = stats::qnorm
df = Inf
d = function(x, mu = 0, sigma = 1) dt((x - mu)/sigma, df = df)/sigma
q = function(x, mu = 0, sigma = 1) qt((x - mu)/sigma, df = df)
kernel = Vectorize(function(x) {
mean(1/(d(q(x)))*d(q(x), q(data)*psi(h), h))
})
kernel
}
set.seed(313)
data = rbeta(100, 2, 7)
h = 0.3
x = seq(0, 1, by = 0.01)
plot(x, kern(data)(x), type = "l")
lines(x, dbeta(x, 2, 7))
kern = function(data) {
#psi = function(h) sqrt(1 - h^2)
psi = function(h) (1 - h^2)^2
#psi = function(h) 1
d = stats::dnorm
q = stats::qnorm
df = Inf
d = function(x, mu = 0, sigma = 1) dt((x - mu)/sigma, df = df)/sigma
q = function(x, mu = 0, sigma = 1) qt((x - mu)/sigma, df = df)
kernel = Vectorize(function(x) {
mean(1/(d(q(x)))*d(q(x), q(data)*psi(h), h))
})
kernel
}
set.seed(313)
data = rbeta(100, 2, 7)
h = 0.1
x = seq(0, 1, by = 0.01)
plot(x, kern(data)(x), type = "l")
lines(x, dbeta(x, 2, 7))
kern = function(data) {
#psi = function(h) sqrt(1 - h^2)
psi = function(h) (1 - h^2)^2
#psi = function(h) 1
d = stats::dnorm
q = stats::qnorm
df = Inf
d = function(x, mu = 0, sigma = 1) dt((x - mu)/sigma, df = df)/sigma
q = function(x, mu = 0, sigma = 1) qt((x - mu)/sigma, df = df)
kernel = Vectorize(function(x) {
mean(1/(d(q(x)))*d(q(x), q(data)*psi(h), h))
})
kernel
}
set.seed(313)
data = rbeta(100, 2, 7)
h = 0.2
x = seq(0, 1, by = 0.01)
plot(x, kern(data)(x), type = "l")
lines(x, dbeta(x, 2, 7))
kern = function(data) {
#psi = function(h) sqrt(1 - h^2)
psi = function(h) (1 - h^2)^2
#psi = function(h) 1
d = stats::dnorm
q = stats::qnorm
df = 1
d = function(x, mu = 0, sigma = 1) dt((x - mu)/sigma, df = df)/sigma
q = function(x, mu = 0, sigma = 1) qt((x - mu)/sigma, df = df)
kernel = Vectorize(function(x) {
mean(1/(d(q(x)))*d(q(x), q(data)*psi(h), h))
})
kernel
}
set.seed(313)
data = rbeta(100, 2, 7)
h = 0.2
x = seq(0, 1, by = 0.01)
plot(x, kern(data)(x), type = "l")
lines(x, dbeta(x, 2, 7))
kern = function(data) {
#psi = function(h) sqrt(1 - h^2)
psi = function(h) (1 - h^2)^2
#psi = function(h) 1
d = stats::dnorm
q = stats::qnorm
df = 2
d = function(x, mu = 0, sigma = 1) dt((x - mu)/sigma, df = df)/sigma
q = function(x, mu = 0, sigma = 1) qt((x - mu)/sigma, df = df)
kernel = Vectorize(function(x) {
mean(1/(d(q(x)))*d(q(x), q(data)*psi(h), h))
})
kernel
}
set.seed(313)
data = rbeta(100, 2, 7)
h = 0.2
x = seq(0, 1, by = 0.01)
plot(x, kern(data)(x), type = "l")
lines(x, dbeta(x, 2, 7))
kern = function(data) {
#psi = function(h) sqrt(1 - h^2)
psi = function(h) (1 - h^2)^2
#psi = function(h) 1
d = stats::dnorm
q = stats::qnorm
df = 3
d = function(x, mu = 0, sigma = 1) dt((x - mu)/sigma, df = df)/sigma
q = function(x, mu = 0, sigma = 1) qt((x - mu)/sigma, df = df)
kernel = Vectorize(function(x) {
mean(1/(d(q(x)))*d(q(x), q(data)*psi(h), h))
})
kernel
}
set.seed(313)
data = rbeta(100, 2, 7)
h = 0.2
x = seq(0, 1, by = 0.01)
plot(x, kern(data)(x), type = "l")
lines(x, dbeta(x, 2, 7))
kern = function(data) {
#psi = function(h) sqrt(1 - h^2)
psi = function(h) (1 - h^2)^2
#psi = function(h) 1
d = stats::dnorm
q = stats::qnorm
df = 4
d = function(x, mu = 0, sigma = 1) dt((x - mu)/sigma, df = df)/sigma
q = function(x, mu = 0, sigma = 1) qt((x - mu)/sigma, df = df)
kernel = Vectorize(function(x) {
mean(1/(d(q(x)))*d(q(x), q(data)*psi(h), h))
})
kernel
}
set.seed(313)
data = rbeta(100, 2, 7)
h = 0.2
x = seq(0, 1, by = 0.01)
plot(x, kern(data)(x), type = "l")
lines(x, dbeta(x, 2, 7))
kern = function(data) {
#psi = function(h) sqrt(1 - h^2)
psi = function(h) (1 - h^2)^2
#psi = function(h) 1
d = stats::dnorm
q = stats::qnorm
df = 1
d = function(x, mu = 0, sigma = 1) dt((x - mu)/sigma, df = df)/sigma
q = function(x, mu = 0, sigma = 1) qt((x - mu)/sigma, df = df)
kernel = Vectorize(function(x) {
mean(1/(d(q(x)))*d(q(x), q(data)*psi(h), h))
})
kernel
}
set.seed(313)
data = rbeta(100, 2, 7)
h = 0.2
x = seq(0, 1, by = 0.01)
plot(x, kern(data)(x), type = "l")
lines(x, dbeta(x, 2, 7))
kern = function(data) {
#psi = function(h) sqrt(1 - h^2)
psi = function(h) (1 - h^2)^2
#psi = function(h) 1
d = stats::dnorm
q = stats::qnorm
df = 1
d = function(x, mu = 0, sigma = 1) dt((x - mu)/sigma, df = df)/sigma
q = function(x, mu = 0, sigma = 1) qt((x - mu)/sigma, df = df)
kernel = Vectorize(function(x) {
mean(1/(d(q(x)))*d(q(x), q(data)*psi(h), h))
})
kernel
}
set.seed(313)
data = rbeta(100, 2, 7)
h = 0.2
x = seq(0, 1, by = 0.01)
plot(x, kern(data)(x), type = "l")
lines(x, dbeta(x, 2, 7))
kern = function(data) {
#psi = function(h) sqrt(1 - h^2)
psi = function(h) (1 - h^2)^2
#psi = function(h) 1
d = stats::dnorm
q = stats::qnorm
df = 1
d = function(x, mu = 0, sigma = 1) dt((x - mu)/sigma, df = df)/sigma
q = function(x, mu = 0, sigma = 1) qt((x - mu)/sigma, df = df)
kernel = Vectorize(function(x) {
mean(1/(d(q(x)))*d(q(x), q(data)*psi(h), h))
})
kernel
}
set.seed(313)
data = rbeta(100, 2, 7)
h = 0.2
x = seq(0, 1, by = 0.01)
plot(x, kern(data)(x), type = "l")
lines(x, dbeta(x, 2, 7))
kern = function(data) {
#psi = function(h) sqrt(1 - h^2)
psi = function(h) (1 - h^2)^2
#psi = function(h) 1
d = stats::dnorm
q = stats::qnorm
df = 2
d = function(x, mu = 0, sigma = 1) dt((x - mu)/sigma, df = df)/sigma
q = function(x, mu = 0, sigma = 1) qt((x - mu)/sigma, df = df)
kernel = Vectorize(function(x) {
mean(1/(d(q(x)))*d(q(x), q(data)*psi(h), h))
})
kernel
}
set.seed(313)
data = rbeta(100, 2, 7)
h = 0.2
x = seq(0, 1, by = 0.01)
plot(x, kern(data)(x), type = "l")
lines(x, dbeta(x, 2, 7))
kern = function(data) {
#psi = function(h) sqrt(1 - h^2)
psi = function(h) (1 - h^2)^2
#psi = function(h) 1
d = stats::dnorm
q = stats::qnorm
df = 2
d = function(x, mu = 0, sigma = 1) dt((x - mu)/sigma, df = df)/sigma
e = dlogis
q = function(x, mu = 0, sigma = 1) qt((x - mu)/sigma, df = df)
kernel = Vectorize(function(x) {
mean(1/(d(q(x)))*e(q(x), q(data)*psi(h), h))
})
kernel
}
set.seed(313)
data = rbeta(100, 2, 7)
h = 0.2
x = seq(0, 1, by = 0.01)
plot(x, kern(data)(x), type = "l")
lines(x, dbeta(x, 2, 7))
kern = function(data) {
#psi = function(h) sqrt(1 - h^2)
psi = function(h) (1 - h^2)^2
#psi = function(h) 1
d = stats::dnorm
q = stats::qnorm
df = 2
d = function(x, mu = 0, sigma = 1) dt((x - mu)/sigma, df = df)/sigma
e = dlogis
q = function(x, mu = 0, sigma = 1) qt((x - mu)/sigma, df = df)
kernel = Vectorize(function(x) {
mean(1/(d(q(x)))*e(q(x), q(data)*psi(h), h))
})
kernel
}
set.seed(313)
data = rbeta(100, 2, 7)
h = 0.2
x = seq(0, 1, by = 0.01)
plot(x, kern(data)(x), type = "l")
lines(x, dbeta(x, 2, 7))
kern = function(data) {
#psi = function(h) sqrt(1 - h^2)
psi = function(h) (1 - h^2)^2
#psi = function(h) 1
d = stats::dnorm
q = stats::qnorm
df = 2
d = dlogis
e = dnorm
q = qlogis
kernel = Vectorize(function(x) {
mean(1/(d(q(x)))*e(q(x), q(data)*psi(h), h))
})
kernel
}
set.seed(313)
data = rbeta(100, 2, 7)
h = 0.2
x = seq(0, 1, by = 0.01)
plot(x, kern(data)(x), type = "l")
lines(x, dbeta(x, 2, 7))
kern = function(data) {
#psi = function(h) sqrt(1 - h^2)
psi = function(h) (1 - h^2)^2
#psi = function(h) 1
d = stats::dnorm
q = stats::qnorm
df = 2
d = dlogis
e = dnorm
q = qlogis
kernel = Vectorize(function(x) {
mean(1/(d(q(x)))*e(q(x), q(data)*psi(h), h))
})
kernel
}
set.seed(313)
data = rbeta(100, 2, 7)
h = 0.1
x = seq(0, 1, by = 0.01)
plot(x, kern(data)(x), type = "l")
lines(x, dbeta(x, 2, 7))
kern = function(data) {
#psi = function(h) sqrt(1 - h^2)
psi = function(h) (1 - h^2)^2
#psi = function(h) 1
d = stats::dnorm
q = stats::qnorm
df = 2
d = dlogis
e = dnorm
q = qlogis
kernel = Vectorize(function(x) {
mean(1/(d(q(x)))*e(q(x), q(data)*psi(h), h))
})
kernel
}
set.seed(313)
data = rbeta(100, 2, 7)
h = 0.4
x = seq(0, 1, by = 0.01)
plot(x, kern(data)(x), type = "l")
lines(x, dbeta(x, 2, 7))
kern = function(data) {
#psi = function(h) sqrt(1 - h^2)
psi = function(h) (1 - h^2)^2
#psi = function(h) 1
d = stats::dnorm
q = stats::qnorm
df = 2
d = dlogis
e = dnorm
q = qlogis
kernel = Vectorize(function(x) {
mean(1/(d(q(x)))*e(q(x), q(data)*psi(h), h))
})
kernel
}
set.seed(313)
data = rbeta(100, 2, 7)
h = 0.3
x = seq(0, 1, by = 0.01)
plot(x, kern(data)(x), type = "l")
lines(x, dbeta(x, 2, 7))
kern = function(data) {
#psi = function(h) sqrt(1 - h^2)
psi = function(h) (1 - h^2)^2
#psi = function(h) 1
d = stats::dnorm
q = stats::qnorm
df = 2
d = dlogis
e = dnorm
q = qlogis
kernel = Vectorize(function(x) {
mean(1/(d(q(x)))*e(q(x), q(data)*psi(h), h))
})
kernel
}
set.seed(313)
data = rbeta(100, 2, 7)
h = 0.2
x = seq(0, 1, by = 0.01)
plot(x, kern(data)(x), type = "l")
lines(x, dbeta(x, 2, 7))
kern = function(data) {
#psi = function(h) sqrt(1 - h^2)
psi = function(h) (1 - h^2)^2
#psi = function(h) 1
d = stats::dnorm
q = stats::qnorm
d = dnorm
e = dnorm
q = qnorm
kernel = Vectorize(function(x) {
mean(1/(d(q(x)))*e(q(x), q(data)*psi(h), h))
})
kernel
}
set.seed(313)
data = rbeta(100, 2, 7)
h = 0.2
x = seq(0, 1, by = 0.01)
plot(x, kern(data)(x), type = "l")
lines(x, dbeta(x, 2, 7))
x
plot(x, exp(x - exp(x)))
x = seq(-2, 2, by = 0.001)
plot(x, exp(x - exp(x)))
x = seq(-10, 10, by = 0.001)
plot(x, exp(x - exp(x)))
plot(x, exp(x - exp(x)) + exp(-x - exp(-x)))
x = seq(0, 1, by = 0.001)
plot(qnorm(x), qnorm(dbeta(x, 2, 7)))
plot(qnorm(x), dbeta(qnorm(x), 2, 7))
plot(qnorm(x), dbeta(qnorm(x), 2, 7), type = "l")
plot(qnorm(x), dbeta(x), 2, 7), type = "l")
plot(qnorm(x), dbeta(x, 2, 7), type = "l")
x = seq(0, 1, by = 0.0001)
plot(qnorm(x), dbeta(x, 2, 7), type = "l")
plot(qnorm(x), dbeta(x, 1, 7), type = "l")
x = seq(0, 1, by = 0.00001)
plot(qnorm(x), dbeta(x, 1, 7), type = "l")
plot(qlogis(x), dbeta(x, 1, 7), type = "l")
plot(x, dbeta(x, 1, 7))
x = seq(0, 1, by = 0.01)
plot(x, dbeta(x, 1, 7))
